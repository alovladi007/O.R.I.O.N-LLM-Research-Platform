apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: orion-platform
data:
  postgresql.conf: |
    shared_buffers = 256MB
    effective_cache_size = 1GB
    maintenance_work_mem = 64MB
    checkpoint_completion_target = 0.9
    wal_buffers = 16MB
    default_statistics_target = 100
    random_page_cost = 1.1
    effective_io_concurrency = 200
    work_mem = 4MB
    min_wal_size = 1GB
    max_wal_size = 4GB
    max_worker_processes = 4
    max_parallel_workers_per_gather = 2
    max_parallel_workers = 4
    max_parallel_maintenance_workers = 2
---
apiVersion: v1
kind: Service
metadata:
  name: orion-postgres
  namespace: orion-platform
  labels:
    app: orion
    component: postgres
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: orion
    component: postgres
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgres
---
apiVersion: v1
kind: Service
metadata:
  name: orion-postgres-read
  namespace: orion-platform
  labels:
    app: orion
    component: postgres
spec:
  type: ClusterIP
  selector:
    app: orion
    component: postgres
    role: replica
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: orion-postgres
  namespace: orion-platform
spec:
  serviceName: orion-postgres
  replicas: 3
  selector:
    matchLabels:
      app: orion
      component: postgres
  template:
    metadata:
      labels:
        app: orion
        component: postgres
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: component
                operator: In
                values:
                - postgres
            topologyKey: kubernetes.io/hostname
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsNonRoot: true
      containers:
      - name: postgres
        image: postgres:16-alpine
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          value: orion_db
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: orion-secrets
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: orion-secrets
              key: postgres-password
        - name: POSTGRES_REPLICATION_MODE
          value: master
        - name: POSTGRES_REPLICATION_USER
          value: replicator
        - name: POSTGRES_REPLICATION_PASSWORD
          valueFrom:
            secretKeyRef:
              name: orion-secrets
              key: postgres-replication-password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: postgres-config
          mountPath: /etc/postgresql/postgresql.conf
          subPath: postgresql.conf
        - name: postgres-init
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: postgres-config
        configMap:
          name: postgres-config
      - name: postgres-init
        configMap:
          name: postgres-init-scripts
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: fast-ssd
      resources:
        requests:
          storage: 100Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-scripts
  namespace: orion-platform
data:
  01-extensions.sql: |
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    CREATE EXTENSION IF NOT EXISTS "pgcrypto";
    CREATE EXTENSION IF NOT EXISTS "pg_trgm";
    CREATE EXTENSION IF NOT EXISTS "btree_gin";
    CREATE EXTENSION IF NOT EXISTS "btree_gist";
  02-replication.sql: |
    CREATE ROLE replicator WITH REPLICATION LOGIN PASSWORD '$POSTGRES_REPLICATION_PASSWORD';
    GRANT CONNECT ON DATABASE orion_db TO replicator;
  03-performance.sql: |
    ALTER SYSTEM SET shared_preload_libraries = 'pg_stat_statements';
    CREATE EXTENSION IF NOT EXISTS pg_stat_statements;
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: orion-postgres-cluster
  namespace: orion-platform
spec:
  instances: 3
  
  postgresql:
    parameters:
      shared_buffers: "256MB"
      effective_cache_size: "1GB"
      max_connections: "200"
      
  bootstrap:
    initdb:
      database: orion_db
      owner: orion
      secret:
        name: orion-secrets
        
  storage:
    size: 100Gi
    storageClass: fast-ssd
    
  monitoring:
    enabled: true
    
  backup:
    retentionPolicy: "30d"
    target: "prefer-standby"
    
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "4Gi"
      cpu: "2"